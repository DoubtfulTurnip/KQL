Sources:
https://techcommunity.microsoft.com/t5/azure-data-explorer-blog/aitm-amp-bec-threat-hunting-with-kql/ba-p/3885166


#Check for emails with HTML attachments
--Requires tables EmailAttachmentInfo, EmailURLInfo, and EmailEvents

let HTMLfile = (EmailAttachmentInfo
| where FileType =~ "html");
let HTMLurl = (EmailUrlInfo
| where UrlLocation == "Attachment"
| summarize HTMLfile_URL_list =  make_list(Url) by NetworkMessageId);
let Emailurl = (EmailUrlInfo
| where UrlLocation == "Body"
| summarize Email_URL_list = make_list(Url) by NetworkMessageId);
EmailEvents
| where EmailDirection == "Inbound"
| join kind = inner HTMLfile on NetworkMessageId
| join kind = inner HTMLurl on NetworkMessageId
| join kind = leftouter Emailurl on NetworkMessageId
| project Timestamp, ReportId, NetworkMessageId, SenderFromAddress, RecipientEmailAddress, FileName, FileType, ThreatTypes, ThreatNames, HTMLfile_URL_list, Email_URL_list


#Check for phishing emails where user has been able to click the URL
--Requires tables URLClickEvents and EmailEvents

let UserClickedLink = (UrlClickEvents 
| where Workload == "Email"
| where ActionType == "ClickAllowed" or IsClickedThrough != "0");
EmailEvents
| where EmailDirection == "Inbound"
| where ThreatTypes has_any ("Phish", "Malware")
| join kind = inner UserClickedLink on NetworkMessageId
| project Timestamp, ReportId, NetworkMessageId, SenderFromAddress, RecipientEmailAddress, ActionType, IsClickedThrough, Url 

#This query will be able to identify not only users who received suspicious emails and clicked on URLs from those emails but also the associated devices
--Requires device to be onboarded with Defender for Endpoint
--Requires tables EmailEvents, URLClickEvents, and DeviceEvents

let ClickedURL = EmailEvents
| where EmailDirection == "Inbound"
| where ThreatTypes has_any ("Phish", "Malware")
| join (UrlClickEvents 
| where Workload == "Email"
| where ActionType == "ClickAllowed" or IsClickedThrough != "0") on NetworkMessageId
| project Timestamp, AccountUpn, Url, UrlChain, UrlCount, DeliveryAction;
DeviceEvents
| where ActionType == "BrowserLaunchedToOpenUrl"
| where InitiatingProcessFileName =~ "outlook.exe"
| join kind = inner ClickedURL on $left.RemoteUrl == $right.Url
| project Timestamp, DeviceId, DeviceName, AccountUpn, Url, UrlChain, UrlCount


#Filter Exchange Online action types that could be used for exfiltration and BEC
--Requires table CloudAppEvents

CloudAppEvents
| where Timestamp > ago(30d)
| extend parsed = parse_json(RawEventData)
| where Application == "Microsoft Exchange Online"
and  ActionType in ("Add-MailboxPermission", "New-ManagementRoleAssignment", "Add-MailboxFolderPermission", "New-InboxRule", "Set-InboxRule", "Set-Mailbox", "New-TransportRule", "Set-TransportRule")
and not(parsed.UserId has_any ('NT AUTHORITY\\SYSTEM (Microsoft.Exchange.ServiceHost)', 'NT AUTHORITY\\SYSTEM (w3wp)', 'devilfish-applicationaccount'))
| extend parsed = parse_json(RawEventData)
| extend UPN = tostring(parsed.UserId)
| where UPN == "ENTEREMAILACCOUNTHERE"
| extend Parameters = parsed.Parameters
| mv-expand Parameters
| extend Name = tostring(Parameters.Name)
| extend Value = tostring(Parameters.Value)
| extend packed = pack(Name, Value)
| summarize PackedInfo = make_bag(packed), ActionType=any(ActionType) by ReportId, UPN
| evaluate bag_unpack(PackedInfo)


#Another query to display users who were able to click links in phishing emails
-- Requires UrlClickEvents and Email Events

let UrlClicked = (UrlClickEvents
| where ActionType == "ClickAllowed" or IsClickedThrough !="0"
| extend Device_IPv4 = IPAddress
| project ActionType, Device_IPv4, Url, UrlChain, IPAddress, NetworkMessageId);
 EmailEvents
| where Timestamp > ago(7d)
| where isnotempty(ThreatTypes) and EmailDirection == "Inbound"
| where ThreatTypes has_any ("Malware", "Phish")
| extend SenderFromAddress_IPv4 = strcat(SenderFromAddress, ", ", SenderIPv4)
| join kind = inner UrlClicked on NetworkMessageId
| project Timestamp,NetworkMessageId, Subject, SenderFromAddress_IPv4, 
RecipientEmailAddress, ThreatTypes, ActionType, Url, UrlChain, Device_IPv4,
LatestDeliveryLocation, LatestDeliveryAction, EmailAction, EmailActionPolicy
