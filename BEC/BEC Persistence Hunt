#Filter Exchange Online action types that could be used for exfiltration and BEC
--Requires table CloudAppEvents

CloudAppEvents
| where Timestamp > ago(30d)
| extend parsed = parse_json(RawEventData)
| where Application == "Microsoft Exchange Online"
and  ActionType in ("Add-MailboxPermission", "New-ManagementRoleAssignment", "Add-MailboxFolderPermission", "New-InboxRule", "Set-InboxRule", "Set-Mailbox", "New-TransportRule", "Set-TransportRule")
and not(parsed.UserId has_any ('NT AUTHORITY\\SYSTEM (Microsoft.Exchange.ServiceHost)', 'NT AUTHORITY\\SYSTEM (w3wp)', 'devilfish-applicationaccount'))
| extend parsed = parse_json(RawEventData)
| extend UPN = tostring(parsed.UserId)
| where UPN == "ENTEREMAILACCOUNTHERE"
| extend Parameters = parsed.Parameters
| mv-expand Parameters
| extend Name = tostring(Parameters.Name)
| extend Value = tostring(Parameters.Value)
| extend packed = pack(Name, Value)
| summarize PackedInfo = make_bag(packed), ActionType=any(ActionType) by ReportId, UPN
| evaluate bag_unpack(PackedInfo)


#Another query to display users who were able to click links in phishing emails
-- Requires UrlClickEvents and Email Events

let UrlClicked = (UrlClickEvents
| where ActionType == "ClickAllowed" or IsClickedThrough !="0"
| extend Device_IPv4 = IPAddress
| project ActionType, Device_IPv4, Url, UrlChain, IPAddress, NetworkMessageId);
 EmailEvents
| where Timestamp > ago(7d)
| where isnotempty(ThreatTypes) and EmailDirection == "Inbound"
| where ThreatTypes has_any ("Malware", "Phish")
| extend SenderFromAddress_IPv4 = strcat(SenderFromAddress, ", ", SenderIPv4)
| join kind = inner UrlClicked on NetworkMessageId
| project Timestamp,NetworkMessageId, Subject, SenderFromAddress_IPv4, 
RecipientEmailAddress, ThreatTypes, ActionType, Url, UrlChain, Device_IPv4,
LatestDeliveryLocation, LatestDeliveryAction, EmailAction, EmailActionPolicy
